# ROS Continuos Integration based on ros-tooling https://github.com/ros-tooling
name: ROS CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        ros_distribution:
          - melodic
        include:
          - docker_image: ubuntu:bionic
            ros_distribution: melodic
    container:
      image: ${{ matrix.docker_image }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Print the environment variables to simplify development and debugging
      - name: Environment Variables
        run: env

      - uses: ros-tooling/setup-ros@v0.1
        with:
          required-ros-distributions:  ${{ matrix.ros_distribution }}

      # joint-state-publisher package is deprecated, instead use joint-state-publisher-gui
      - run: sudo apt-get install ros-melodic-joint-state-publisher-gui

      - uses: ros-tooling/action-ros-ci@v0.1
        id: action-ros-ci
        with:
          vcs-repo-file-url: "${{ github.workspace }}/.github/workflows/rosdeps_packages.repos"
          package-name: fake_ar_publisher universal_robot ur5_demo_descartes myworkcell_core myworkcell_support
          # Following https://github.com/ros-tooling/action-ros-ci#use-with-a-private-repo
          # actions-ros-ci on a private repository needs a Github Token
          import-token: ${{ secrets.ROS_CI_TOKEN }}
          target-ros1-distro: ${{ matrix.ros_distribution }}

      # Test urdf launch file
      - run: "source /opt/ros/${{ matrix.ros_distribution }}/setup.bash && source ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/install/local_setup.bash &&  source ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/install/setup.bash && roslaunch myworkcell_support urdf.launch"

      # Test workcell launch file
      #- run: "source /opt/ros/${{ matrix.ros_distribution }}/setup.bash && source ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/install/local_setup.bash &&  source ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}/install/setup.bash && roslaunch myworkcell_support workcell.launch"
